<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Practical Systems Engineering - Engineering</title><link href="https://johntrinh.net/" rel="alternate"></link><link href="https://johntrinh.net/feeds/engineering.atom.xml" rel="self"></link><id>https://johntrinh.net/</id><updated>2021-05-04T00:00:00-07:00</updated><subtitle>Engineering of the Mind</subtitle><entry><title>What Engineers Do At Work</title><link href="https://johntrinh.net/what-engineers-do-at-work.html" rel="alternate"></link><published>2021-04-11T00:00:00-07:00</published><updated>2021-05-04T00:00:00-07:00</updated><author><name>John Trinh</name></author><id>tag:johntrinh.net,2021-04-11:/what-engineers-do-at-work.html</id><summary type="html">&lt;p&gt;A guide for engineering students and new grads to understand the various roles of engineers in the context of teams, projects, and project phases.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;What do engineers do, anyway?&lt;/h1&gt;
&lt;p&gt;Engineers are professional problem-solvers that apply a combination of physics, math, and risk management to design and develop practical solutions to the world's problems. One of the most common questions I get from engineering students is: &lt;em&gt;"What's an average day like for an engineer?"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On the surface this is a simple question, but over the years I've discovered that it isn't easy to answer and is only a starting point to a vast amount of information. The problem with this question is that for most engineers, their typical day changes depending on what they're working on and how far into the project they are. To make things worse, most of the info I've found on the internet is generic and doesn't meaningfully describe what engineers do at work. What I've read also fails to put the job into the context of what it's like to work on a team. When I think about what I do at work as a Systems Engineer, it's difficult to sum it up without explaining a bunch of background info needed for someone to understand how my job fits into the big picture.&lt;/p&gt;
&lt;p&gt;In this article, I hope to explain a good bit of this background info and use it to point people in the right direction to find their own answers to this question. Since everyone's situation, interests, and skills are different, the best person to find the actual answer to the question is you. Rather than addressing the question directly, I'll instead provide you with a few smart questions that will move you in the right direction towards something that's compatible with your strengths and style of work.&lt;/p&gt;
&lt;p&gt;Whether you're a student, new graduate, or simply someone who's interested in learning what engineering is all about, I think this article has a lot of useful info for you.&lt;/p&gt;
&lt;p&gt;To start, the stereotypical engineer's answer to any complex question like this is &lt;em&gt;"It depends."&lt;/em&gt; An engineer's average day depends on a few key things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Role&lt;/li&gt;
&lt;li&gt;The Project Phase&lt;/li&gt;
&lt;li&gt;Industry&lt;/li&gt;
&lt;li&gt;The specific project being worked on&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Role&lt;/h1&gt;
&lt;p&gt;Regardless of the engineer's selected discipline (e.g. Mechanical, Electrical, Civil), the thing that determines their typical daily activities the most is their role. Roles can often be identified by job title, though the title itself isn't all that important. Roles can be organized into different pools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Program Management&lt;/li&gt;
&lt;li&gt;Systems &amp;amp; Processes&lt;/li&gt;
&lt;li&gt;Research&lt;/li&gt;
&lt;li&gt;Design &amp;amp; Analysis&lt;/li&gt;
&lt;li&gt;Fabrication (Manufacturing)&lt;/li&gt;
&lt;li&gt;Assembly, Integration, and Test&lt;/li&gt;
&lt;li&gt;Safety &amp;amp; Reliability&lt;/li&gt;
&lt;li&gt;Sales &amp;amp; Business Development&lt;/li&gt;
&lt;li&gt;Operations &amp;amp; Maintenance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All engineers will work on a variety of tasks depending on the phase of the project, but a their core role responsibilities and contribution to the project will more or less remain the same. Another thing that doesn't change is that nearly all engineers work within a team and must interact with people to some extent in order to perform in their job successfully. Role is helpful in understanding how that engineer interacts with their team and the larger organization, so understanding the what each roles does and why their function in a team is important is the first and most important step towards understanding what engineers do.&lt;/p&gt;
&lt;h2&gt;Key Questions About Role&lt;/h2&gt;
&lt;p&gt;Which roles...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deal with people more (or less) on a daily basis?&lt;/li&gt;
&lt;li&gt;lets me work with my hands / away from the desk vs. sit at a computer all day?&lt;/li&gt;
&lt;li&gt;lets me be a subject-matter expert that people go to for advice vs. a jack of all trades able to work on any problem?&lt;/li&gt;
&lt;li&gt;focus on planning &amp;amp; the big picture vs. the nitty-gritty technical details?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These kinds of questions and role pools are much more useful in providing students and inexperienced engineers advice for what direction they want to take their careers in based on what they like to do. Don't want to be stuck to a desk all day? Look into Test Engineering and Manufacturing Engineering. Want to do statistical analysis? Try Safety Engineering. Big-picture technical planning and system architecture? Systems Engineering is for you.&lt;/p&gt;
&lt;h1&gt;The Project Phase&lt;/h1&gt;
&lt;p&gt;&lt;img alt="Life-Cycle Cost Impacts from Early Phase Decision-Making" src="https://johntrinh.net/images/life-cycle-costs.png"&gt;&lt;/p&gt;
&lt;p&gt;Most large engineering projects follow a structure of milestone reviews that are used to assess the project against schedule &amp;amp; cost and expected technical maturity. The diagram above from the NASA Systems Engineering Handbook shows the schedule of milestone reviews on the X-axis (time) against the total program costs on the Y-axis. The important thing to note in the diagram are the labels of each of the yellow bars, which is are the phases that most programs typically follow. The whole Systems Engineering process is applied in large part to make sure that the project successfully meets each milestone, and tells us to push back on decision-makers when the maturity of the engieering isn't ready according to the metrics we use.&lt;/p&gt;
&lt;p&gt;In terms of what engineers do in each phase of a project, it should be clear from the previous section that it varies by role. A Design Engineer or analysis-focused role such as Stress/Simulation Engineer and Loads &amp;amp; Dynamics Engineer will spend the entire project on design &amp;amp; analysis activities throughout the whole program after the requirements are set in stone. A hardware-focused engineer like a Manufacturing Engineer or Test Engineer will focus on planning while the engineering is still maturing in the first half of a typical project, but will quickly shift to assembly, integration, and testing once raw material and parts have been received, and designs need to be tested according to the plans that were created earlier.&lt;/p&gt;
&lt;p&gt;The next few sections describe each phase in some detail and should give you a sense for the type of work that gets done in that phase. To keep it concise, I don't cover everything that happens in each phase (that would take several articles), but it should provide enough background to understand how the various roles fit into an engineering program.&lt;/p&gt;
&lt;h2&gt;Key Questions About Project Phase&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What are the most important things to accomplish in each phase of the project?&lt;/li&gt;
&lt;li&gt;How does cost &amp;amp; schedule factor into the project phases? (Refer to the diagram)&lt;/li&gt;
&lt;li&gt;What does each role do during each phase? How does this change as the project progresses?&lt;/li&gt;
&lt;li&gt;What is this particular role responsible for within a team? How do they contribute to the team?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Descriptions of Project Phases&lt;/h2&gt;
&lt;h3&gt;Phase 1: Concept&lt;/h3&gt;
&lt;p&gt;This is the phase where Systems Engineers, domain experts, get together with the Customer to understand the mission (i.e. the problem) and come up with the form of the solution. After the solution is understood, Systems Engineers begin writing the system requirements specifications for every component of the solution, which sets the technical targets for all engineers to work towards as they come up with specific designs.&lt;/p&gt;
&lt;p&gt;Using the Apollo mission as an example, the problem NASA had was to land the first humans on the moon, and the form of the solution was the lunar lander launched on the Atlas V rocket along with all the other necessary technologies, ranging from the flight computer to the spacesuits used by the astronauts.&lt;/p&gt;
&lt;h4&gt;Typical Activities in Concept Phase&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Create and proof the Concept of Operations (ConOps) - define the entire mission / problem, the proposed solution, and how the solution works at a high level to assess the viability of the proposed solution and what it would take to create it.&lt;/li&gt;
&lt;li&gt;Develop the System Architectures - technical details of the form of the proposed solution, including the subsystems.&lt;/li&gt;
&lt;li&gt;Conduct Trade-off Studies on system architectures to determine the most optimal ones for the mission.&lt;/li&gt;
&lt;li&gt;Begin writing the system &amp;amp; subsystem requirements specifications&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Phase 2: Design&lt;/h3&gt;
&lt;p&gt;This is the phase where preliminary designs are created by Design Engineers using  CAD software based on the specifications that were started in the Concept Phase. Analysis-focused roles will develop loads and analyze designs as they're being created. System Engineers will continue to mature the requirements because often, especially with new technologies, the problem is never fully understood until engineers start digging deeper into the solutions, sometimes wishing they had done it some other way.&lt;/p&gt;
&lt;p&gt;By the end of the Design Phase, the form of the solution should be clearly defined based on the specifications and have sufficient technical maturity for the first major design milestone, the Preliminary Design Review or PDR.&lt;/p&gt;
&lt;h4&gt;Typical Activities in Design Phase&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Systems Engineering&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mature the system requirements specifications for the system and subsystems to solidify technical targets&lt;/li&gt;
&lt;li&gt;Negotiate technical budgets between subsystems as they mature (mass, power, heat flux, pointing, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Engineering Design &amp;amp; Analysis:&lt;/strong&gt; This is what most people think of as the 'meat' of engineering and includes a wide range of work, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calculate the loads that will occur throughout the mission&lt;/li&gt;
&lt;li&gt;Create designs in CAD and crunch the numbers to make sure they meet the Margins of Safety&lt;/li&gt;
&lt;li&gt;Conduct technical Trade-off Studies to mature specific technical solutions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Risk Reduction:&lt;/strong&gt; Once specific designs have been identified and created, that enables the procurement of long-lead items including raw material, specialized or custom tooling, and difficult to manufacture designs (e.g. large components machined from a single piece of raw material)&lt;/p&gt;
&lt;p&gt;Write Development Test Plans&lt;/p&gt;
&lt;h3&gt;Phase 3: Development&lt;/h3&gt;
&lt;p&gt;This phase is a continuation of the Design Phase, but focused almost entirely on the Engineering Design &amp;amp; Analysis. The system requirements specifications should be entered into configuration control to avoid any "moving target" problems for Design &amp;amp; Analysis Engineers. By the end of the Development Phase, technical solutions should fully mature and be ready for the second major design milestone, the Critical Design Review or CDR.&lt;/p&gt;
&lt;h4&gt;Typical Activities in Development Phase&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Engineering Design &amp;amp; Analysis:&lt;/strong&gt; More design &amp;amp; analysis cycles to mature the technical designs&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;More risk reduction:&lt;/strong&gt; Some subsystems may decide that some technical risks are so great that it's worthwhile to burn down the risk by conducting additional analysis or testing to validate the design and to understand how the solution works in the real world.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Non-linear analysis (e.g. Finite Element Analysis) -- more difficult, more time-intensive analysis that's 5-10% more accurate than a typical linear analysis&lt;/li&gt;
&lt;li&gt;Development testing -- testing using prototype / proto-flight hardware of preliminary designs to get real, verifiable results that confirm or reject predictions from analytical methods&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Write Qualification Test Plans&lt;/p&gt;
&lt;p&gt;Prepare for Manufacturing Readiness Reviews (MRR)&lt;/p&gt;
&lt;h3&gt;Phase 4: Production &amp;amp; Test&lt;/h3&gt;
&lt;p&gt;In this phase, all designs should be finalized following CDR and allow for the procurement of qualification hardware, or hardware that's identical to the flight hardware in every way for the purposes of testing. Qualification Testing ensures that the actual flight hardware meets all the requirements and analytical predictions made during earlier phases. &lt;/p&gt;
&lt;h4&gt;Typical Activities in Production &amp;amp; Test Phase&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Finalize designs following CDR&lt;/li&gt;
&lt;li&gt;Procure / manufacture hardware&lt;/li&gt;
&lt;li&gt;Assembly, Integration, and Testing (AI&amp;amp;T)&lt;/li&gt;
&lt;li&gt;Qualification Testing&lt;/li&gt;
&lt;li&gt;Write Maintenance Manuals and other operations documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Phase 5: Operations through Disposal&lt;/h3&gt;
&lt;p&gt;This is the phase where the solution gets delivered to the customer (e.g. NASA) for operation, where it will get deployed in the missions it was designed for until the end of its life. At this point, the engineering is pretty much finished and focus shifts over to operations &amp;amp; maintenance.&lt;/p&gt;
&lt;h4&gt;Typical Activities in Operations Phase&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Support customer with operations, such as training, transportation to facilities, and any field assembly/maintenance needed&lt;/li&gt;
&lt;li&gt;Produce engineering documentation, including program retrospectives and lessons learned&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Industry&lt;/h1&gt;
&lt;p&gt;&lt;img alt="Supply Chain Pyramid" src="https://johntrinh.net/images/supply-chain-pyramid.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Industry is roughly defined as the sectors of the economy that produce goods through a combination of research &amp;amp; development (R&amp;amp;D) and engineering. Automobile, Power Generation, Aerospace/Defense, Spaceflight, and Consumer Electronics are examples of industries that employ engineers across various disciplines.&lt;/p&gt;
&lt;p&gt;Companies in each industry can be categorized based on their role in the hierarchy of the supply chain. For example, Apple is considered an &lt;strong&gt;Original Equipment Manufacturer (OEM)&lt;/strong&gt; because they produce iPhones, but many of the components that are used to build an iPhone like the screen, processors, circuitry, and battery are purchased from &lt;strong&gt;Suppliers&lt;/strong&gt; that specifically make those components.&lt;/p&gt;
&lt;h2&gt;Key Questions About Industry&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What are some unique things about this industry that I should know about?&lt;/li&gt;
&lt;li&gt;What is the balance of government vs. private contracts in this industry?&lt;/li&gt;
&lt;li&gt;Which parts of this industry are growing or shrinking? What about the industry overall? (&lt;strong&gt;Note:&lt;/strong&gt; Refer to the Bureau of Labor Statistics for some answers to this)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;The specific project being worked on&lt;/h1&gt;
&lt;p&gt;Projects come in many forms with a variety of budgets and goals. How they tend to progress depends on the industry, what role the government plays, and overall impact on society. In Donald Mackenzie's famous book &lt;a href="https://johntrinh.net/four-books-every-engineer-should-read.html"&gt;that I recommended&lt;/a&gt;, "Inventing Accuracy", he explains that all engineering is an intersection of technology, the public, and government; told through the lens of the development of guidance systems for nuclear missiles.&lt;/p&gt;
&lt;p&gt;Engineers should take this into account when looking at job opportunities and consider the role of government, the publicity of the project, and how aggressive the schedule looks -- These are good indicators for how fast-paced the work environment will be.&lt;/p&gt;
&lt;h2&gt;Key Questions About the Specific Project&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;How is the project being funded? (Government funded, private investment, self-funded, or a combination of these)&lt;/li&gt;
&lt;li&gt;When is the final product scheduled to be delivered? (e.g. Launch date, flight test date, or other deadline)&lt;/li&gt;
&lt;li&gt;Does the project have a plan to staff adequately for the amount of work planned / expected?&lt;/li&gt;
&lt;li&gt;What phase is the project currently in?&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Concluding Thoughts&lt;/h1&gt;
&lt;p&gt;This short guide to figuring out what engineers actually do at work turned out different than how I initially tackled the question, but I think it helps explain what engineers do in the context of their role in a team, project, and phase of the project. I hope students and new graduates can use it as a starting point to plan the trajectory of their engineering careers by asking some of the key questions that I pointed out for each of the factors that affect the job of each engineer.&lt;/p&gt;
&lt;p&gt;In some future articles that I have planned, I'll go into detail on the engineering problem-solving process, which should give readers insight into specific tasks that engineers typically do. I'll also explain how these problem-solving skills can be learned by anyone and applied to solve problems that we deal with in life -- especially open-ended problems with no clear endpoint (e.g. How do I find a job? How do I know when I've found the right job for me?), and abstract problems that don't have an obvious or clear solution (e.g. How do I figure out what to major in? How do I become more productive?)&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/AskEngineers/comments/fsnruy/what_types_of_engineers_are_there_not_mechelecchem/"&gt;reddit: What types of engineers are there? (not mech/elec/chem...)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.nasa.gov/sites/default/files/atoms/files/nasa_systems_engineering_handbook_0.pdf"&gt;NASA Systems Engineering Handbook (NASA SP-2016-6105 Rev2):&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Engineering"></category><category term="engineering"></category><category term="keystone"></category></entry><entry><title>Task Conflict in Engineering</title><link href="https://johntrinh.net/task-conflict-in-engineering.html" rel="alternate"></link><published>2021-02-07T00:00:00-08:00</published><updated>2021-02-27T00:00:00-08:00</updated><author><name>John Trinh</name></author><id>tag:johntrinh.net,2021-02-07:/task-conflict-in-engineering.html</id><summary type="html">&lt;p&gt;Why engineers are good at solving problems, and the archetype that technical development teams shouldn't tolerate.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Physicist Richard Feynman once said, "The first principle is that you must not fool yourself, and you are the easiest person to fool." One way we fool ourselves is by imagining we know more than we do; we think we are experts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This past week's episode of the &lt;a href="https://hiddenbrain.org/podcast/the-easiest-person-to-fool/"&gt;Hidden Brain&lt;/a&gt; podcast got me thinking about how engineers deal with this in their everyday work, and how the best teams &amp;amp; companies develop a culture that encourages task conflict without relationship conflict.&lt;/p&gt;
&lt;p&gt;When we think about conflict, we usually think about a disagreement between people where someone takes things personally, as an attack on their character or their beliefs. In the podcast, author Adam Grant describes this as &lt;strong&gt;Relationship Conflict.&lt;/strong&gt; By contrast, &lt;strong&gt;Task Conflict&lt;/strong&gt; is "the idea of debating about different opinions and perspectives; it's potentially constructive because it's actually about trying to get to the truth. It's not personal, it's not emotional, we're not trying to beat up the other person... we're trying to hash out or sort out different views."&lt;/p&gt;
&lt;p&gt;This made me realize that task conflict is something engineers are trained to do intuitively. When we need to develop a solution to a problem, we debate on the physics, math, design approach, costs, and risks of the solution. The goal is always to move the ball towards a technical solution. While it's impossible to completely avoid relationship conflicts, any engineer who's ever contributed meaningfully to an engineering project probably valued creating the most optimal solutions over validating their worth or ego.&lt;/p&gt;
&lt;h1&gt;The Keys to Task Conflict in Engineering&lt;/h1&gt;
&lt;p&gt;Why are engineers able to do this? What is it about our profession that cultivates task conflict while actively rejecting relationship conflict? From my experience, I think there are several keys to our success.&lt;/p&gt;
&lt;h2&gt;The Engineering Process&lt;/h2&gt;
&lt;p&gt;I'll go into detail in a future article, but the process of engineering is inherently problem focused. The process every engineering student is taught in school as part of their fundamentals is reinforced as they become working professionals. The process leaves little room for relationship conflict because such conflict is an inefficient way of problem-solving that distracts from the purpose of the team and the program as a whole.&lt;/p&gt;
&lt;h2&gt;Engineering Leadership&lt;/h2&gt;
&lt;p&gt;The twenty-fourth Unwritten Law of Sytems Engineering states: "You need a management style with a firm manner and that gives the appearance that you know which way to lead. Hang tough."&lt;/p&gt;
&lt;p&gt;Burnout can happen from working unsustainably long hours, but it can also happen when individuals feel like they're fighting against the system rather than being supported by it in order to do their jobs. Engineers show up to problem solve, and when they have to fight uphill in order to execute technical work, that's when burnout happens. In some extreme cases, there is so much friction between company leadership and the technical work that entire teams of engineers will simply leave the company, causing a faiure cascade as junior engineers are left without the guidance formerly provided by their seniors.&lt;/p&gt;
&lt;p&gt;Some of the best managers I've worked with understand that engineering needs to be supported by company leadership in order to thrive. To make their technical programs successful, they created a healthy rivalry with management instead of fighting against it, and shielded their teams from "management BS" when necessary (which was often). These managers effectively isolated any relationship conflict between themselves and management, allowing their team to stay focused on technical work.&lt;/p&gt;
&lt;h2&gt;Believing in 'The Mission'&lt;/h2&gt;
&lt;p&gt;I also call this phenomenon "the thrill of the problem." In Tracy Kidder's famous non-fiction &lt;em&gt;The Soul of a New Machine&lt;/em&gt;, he tells the story of Data General Corporation and the technical development team behind a new minicomputer in the 1980s. One of the focal themes of this story is that many engineers will work their asses off when given a challenging &amp;amp; fulfilling problem to work on — especially under pressure.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The people working on &lt;em&gt;EGO&lt;/em&gt; [...] truly labored. They worked nights. They worked weekends. They argued hotly with each other. "It was the most incredible, soaring experience of my life," said one of them later. And they worked with astonishing speed. Within two months they had a fairly complete specification.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The cult of SpaceX isn't a new thing — it's simply a modern, scaled-up and highly public manifestation of engineering culture that has existed for as long as engineering itself has.&lt;/p&gt;
&lt;h2&gt;Rejecting the "Brilliant Asshole" Archetype&lt;/h2&gt;
&lt;p&gt;In Julie Zhuo's excellent field guide to management, &lt;em&gt;The Making of a Manager&lt;/em&gt;, she describes the one thing you shouldn't tolerate on your team:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a certain archetype of the brilliant lone wolf, who, though he regularly puts others down, manages to come out the hero because he is simply heads and tails more capable than anyone else. It's a romantic notion in popular media — Sherlock Holmes, Miranda Priestly, Tony Stark — but in real life, these people are not who you want on your team no matter how talented they are. Instead of a multiplier effect, you get a divider effect: the presence of this person makes the rest of your team less effective.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don't think this last point is an axiom like the others. Many engineering teams put up with someone like this on their program, either because of the circumstances — the program doesn't have enough budget to find a replacement — or because the company leadership or technical managers are too inexperienced to recognize the divisive effect this type of person has on the rest of the team.&lt;/p&gt;
&lt;h1&gt;Concluding Thoughts&lt;/h1&gt;
&lt;p&gt;The distinction between task conflict and relationship conflict is an interesting one. We're so used to relationship conflict in popular media and our own lives that we often expect it by default. But engineering culture shows that it's possible to separate the two in order to achieve something greater than any one person.&lt;/p&gt;
&lt;p&gt;The appeal of this to me is that anyone can apply this to their own lives. There's nothing wrong with some healthy conflict between people which helps everyone grow, and to form stronger, more genuine relationships. The problem is often conflict without compassion, which results in toxicity that drives people apart rather than everyone feeling like they're being heard &amp;amp; understood.&lt;/p&gt;
&lt;p&gt;I hope to explore this topic again in deeper detail to look at what makes healthy, authentic relationships, and how engineering problem-solving skills fit into this picture.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Podcast:&lt;/strong&gt; &lt;a href="https://hiddenbrain.org/podcast/the-easiest-person-to-fool"&gt;https://hiddenbrain.org/podcast/the-easiest-person-to-fool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unwritten Laws of Systems Engineering:&lt;/strong&gt; &lt;a href="https://github.com/specifics/aero-structures/blob/master/SysEngLaw.md"&gt;https://github.com/specifics/aero-structures/blob/master/SysEngLaw.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Burnout:&lt;/strong&gt; &lt;a href="https://www.twitch.tv/videos/916814991?t=50m"&gt;https://www.twitch.tv/videos/916814991?t=50m&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;"The Making of a Manager" by Julie Zhuo, Portfolio/Penguin (2019): p.73&lt;/li&gt;
&lt;/ol&gt;</content><category term="Engineering"></category><category term="engineering"></category><category term="psychology"></category></entry></feed>